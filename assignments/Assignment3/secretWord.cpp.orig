#include <iostream>
#include <cstdlib>
#include <ctime>
#include <string>
#include <vector>
using namespace std;
string getSecret();
char getGuess();
bool charInString(string word, char value);
bool charInVector(vector<char> list, char value);
int main() {
    srand(time(0));
    vector<char> allGuesses;
    vector<char> correctGuesses;
    vector<char> wrongGuesses;
    int wrongGuessesAllowed = rand() % 10 + 5;
    char guess;
    string secret = getSecret();
    while (wrongGuesses.size() < wrongGuessesAllowed && correctGuesses.size() != secret.length()) {
       cout << "You have " << (wrongGuessesAllowed - wrongGuesses.size()) << " guesses remaining." << endl;
       guess = getGuess();
       if (charInVector(allGuesses,guess)) {
            cout << "You already guessed the letter " << guess << "!" << endl;
       }
       else if (charInString(secret,guess)){
           allGuesses.push_back(guess);
           correctGuesses.push_back(guess);
           cout << "Correct!" << endl;
       }
       else {
            cout << "Wrong! The letter " << guess << " is not in the word. " << endl;
            allGuesses.push_back(guess);
            wrongGuesses.push_back(guess);
       }
       
    }

    return 0;
}

string getSecret(){
    string secret;
    cout << "Please enter your secret word for player two to guess : ";
    cin >> secret;
    for (int i = 0; i < secret.length(); i++) {
        if (!(isalpha(secret.at(i)))) {
            cout << "Secret must contain only letters! " << endl;
            exit(1);
        }
    }
    return secret;
}

char getGuess() {
    string guess;
    cout << "Please enter a letter to guess. " << endl;
    cin >> guess;
    return guess.at(0);

}

bool charInVector(vector<char> list, char value) {
    for (int i = 0; i < list.size(); i ++) {
        if (list.at(i) == value) {
            return true;
        }
    }
    return false;
}

bool charInString(string word, char value) {
    for (int i = 0; i < word.length(); i++) {
        if (word.at(i) == value) {
            return true;
        }
    }
    return false;
}
